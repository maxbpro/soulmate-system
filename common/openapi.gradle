import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.openapi.generator:org.openapi.generator.gradle.plugin:7.16.0")
    }
}

String[] ymlNames = [
        "gateway",
        "user",
        "keycloak"
]
for (String ymlName : ymlNames) {
    createOpenApiGenerateTask(ymlName)
}


void createOpenApiGenerateTask(String ymlName) {
    String taskName = "openApiGenerate_" + ymlName
    task(taskName, type: GenerateTask) {
        generatorName = "spring"
        apiNameSuffix = "ApiClient"
        inputSpec = "$rootDir/common/openapi/${ymlName}.yaml".toString()
        outputDir = layout.buildDirectory.dir('generated').get().asFile.absolutePath
        apiPackage = "ru.maxb.soulmate.${ymlName}.api"
        modelPackage = "ru.maxb.soulmate.${ymlName}.dto"
        configOptions = [library            : "spring-cloud",
                         useFeignClients    : "true",
                         interfaceOnly      : "true",
                         useJakartaEe       : "true",
                         "useTags"          : "true",
                         "useFeignClientUrl": "true",
                         "openApiNullable"  : "false"
        ]
    }
    compileJava.dependsOn(taskName)
}

tasks.register('annotateFeignClients') {
    doLast {
        for (String ymlName : ymlNames) {
            annotateFeignClients(ymlName)
        }
    }
}

void annotateFeignClients(String ymlName) {
    def apiDir = layout.buildDirectory.dir("generated/src/main/java/ru/maxb/soulmate/${ymlName}/api").get().asFile

    apiDir.eachFile { file ->
        if (file.name.endsWith("ApiClient.java")) {
            def text = file.text
            // Вставляем import сразу после package
            if (!text.contains("import org.springframework.cloud.openfeign.FeignClient;")) {
                text = text.replaceFirst(/(package [^;]+;\s*)/,
                        "\$1import org.springframework.cloud.openfeign.FeignClient;\n")
            }
            // Вставляем аннотацию перед interface
            if (!text.contains("@FeignClient")) {
                text = text.replaceFirst("public interface",
                        "@FeignClient(name = \"${ymlName}-api\", url = \"\\\${${ymlName}.api.base-url}\")\npublic interface")
            }
            file.write(text)
        }
    }
}

sourceSets.main.java.srcDir layout.buildDirectory.dir('generated/src/main/java').get().asFile

sourceSets {
    main {
        java {
            srcDir layout.buildDirectory.dir('generated/src/main/java')
        }
    }
    test {
        java {
            srcDir layout.buildDirectory.dir('generated/src/main/java')
        }
    }
}