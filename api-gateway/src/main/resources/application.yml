spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      server:
        httpserver:
          wiretap: true
        httpclient:
          wiretap: true
#        webflux:
#          routes:
#            - id: profile-by-id-test
#              uri: http://localhost:8082
#              predicates:
#                - Path=/api/users/v1/test
#                - Method=GET

  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: ${application.keycloak.clientId}
            client-secret: ${application.keycloak.clientSecret}
            client-name: individual
            authorization-grant-type: authorization_code
            scope: openid, profile, email
      resourceserver:
        jwt:
          issuer-uri: ${application.keycloak.serverUrl}/realms/${application.keycloak.realm}
logging:
  reactor:
    netty : DEBUG
  level:
#    root: DEBUG
    org:
      springframework:
        cloud:
          gateway: DEBUG
        security: DEBUG

application:
  keycloak:
    realm: customer
    clientId: soulmateApp
    clientSecret: 39fHHVt6VKseUclnOxgADA1NNaeBd8uB
    serverUrl: http://kc-service.default.svc.cluster.local:8080
    realmUrl: ${application.keycloak.serverUrl}/realms/${application.keycloak.realm}
    tokenUrl: ${application.keycloak.realmUrl}/protocol/openid-connect/token
    adminUsername: admin
    adminPassword: admin
    adminClientId: admin-cli


server:
  port: 8081

#keycloak
auth:
  name: ${AUTH_API_NAME:auth}
  url: ${AUTH_API_URL:http://localhost:8080}

keycloakAuth:
  name: ${KEYCLOAK_AUTH_API_NAME:auth}
  url: ${KEYCLOAK_AUTH_API_URL:http://localhost:8080}

users:
  name: ${USERS_API_NAME:kcUsers}
  url: ${USERS_API_NAME:http://localhost:8080}

#end keycloak

profile:
  name: ${PROFILE_API_NAME:person}
  url: ${PROFILE_API_URL:http://localhost:8082}

swipe:
  name: ${SWIPE_API_NAME:swipe}
  url: ${SWIPE_API_URL:http://localhost:8083}

management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    prometheus:
      access: read_only
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  prometheus:
    metrics:
      export:
        enabled: true

#otel:
#  exporter:
#    otlp:
#      endpoint: http://alloy.monitoring.svc.cluster.local:4318
#      protocol: http/protobuf
#  logs:
#    exporter: none
#  metrics:
#    exporter: none
