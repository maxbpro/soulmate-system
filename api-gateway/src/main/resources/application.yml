spring:
  application:
    name: api-gateway
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: ${application.keycloak.clientId}
            client-secret: ${application.keycloak.clientSecret}
            client-name: individual
            authorization-grant-type: authorization_code
            scope: openid, profile, email
      resourceserver:
        jwt:
          issuer-uri: ${application.keycloak.serverUrl}/realms/${application.keycloak.realm}

application:
  keycloak:
    realm: customer
    clientId: soulmateApp
    clientSecret: 39fHHVt6VKseUclnOxgADA1NNaeBd8uB
    serverUrl: http://kc-service.default.svc.cluster.local:8080
    realmUrl: ${application.keycloak.serverUrl}/realms/${application.keycloak.realm}
    tokenUrl: ${application.keycloak.realmUrl}/protocol/openid-connect/token
    adminUsername: admin
    adminPassword: admin
    adminClientId: admin-cli


server:
  port: 8081


management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    prometheus:
      access: read_only
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  prometheus:
    metrics:
      export:
        enabled: true

otel:
  exporter:
    otlp:
      endpoint: http://alloy.monitoring.svc.cluster.local:4318
      protocol: http/protobuf
  logs:
    exporter: none
  metrics:
    exporter: none
